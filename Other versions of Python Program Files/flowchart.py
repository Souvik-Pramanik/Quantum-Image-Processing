from graphviz import Digraph

# Create a new directed graph
flow_chart = Digraph('G', filename='flow_chart', format='png')

# Add nodes
flow_chart.node('Start', 'Start')
flow_chart.node('LoadImage', 'Load Image')
flow_chart.node('Preprocessing', 'Preprocessing')
flow_chart.node('ConvertToGrayscale', 'Convert to Grayscale')
flow_chart.node('ResizeImage', 'Resize Image')
flow_chart.node('BinarizeImage', 'Binarize Image')
flow_chart.node('QuantumDilation', 'Quantum Dilation')
flow_chart.node('EncodeToQuantum', 'Encode to Quantum State')
flow_chart.node('ApplyQuantumDilation', 'Apply Quantum Dilation')
flow_chart.node('MeasureQuantumState', 'Measure Quantum State')
flow_chart.node('ClassicalErosion', 'Classical Erosion')
flow_chart.node('ApplyErosion', 'Apply Erosion using OpenCV')
flow_chart.node('ImageSharpening', 'Image Sharpening')
flow_chart.node('ApplySharpening', 'Apply Sharpening Filter')
flow_chart.node('ImageRestoration', 'Image Restoration')
flow_chart.node('ApplyRestoration', 'Apply Restoration Techniques')
flow_chart.node('Visualization', 'Visualization')
flow_chart.node('DisplayOriginal', 'Display Original Image')
flow_chart.node('DisplayDilated', 'Display Dilated Image')
flow_chart.node('DisplayEroded', 'Display Eroded Image')
flow_chart.node('DisplaySharpened', 'Display Sharpened Image')
flow_chart.node('DisplayRestored', 'Display Restored Image')
flow_chart.node('SaveOutput', 'Save Output Image')
flow_chart.node('End', 'End')

# Add edges
flow_chart.edge('Start', 'LoadImage')
flow_chart.edge('LoadImage', 'Preprocessing')
flow_chart.edge('Preprocessing', 'ConvertToGrayscale')
flow_chart.edge('ConvertToGrayscale', 'ResizeImage')
flow_chart.edge('ResizeImage', 'BinarizeImage')
flow_chart.edge('BinarizeImage', 'QuantumDilation')
flow_chart.edge('QuantumDilation', 'EncodeToQuantum')
flow_chart.edge('EncodeToQuantum', 'ApplyQuantumDilation')
flow_chart.edge('ApplyQuantumDilation', 'MeasureQuantumState')
flow_chart.edge('MeasureQuantumState', 'ClassicalErosion')
flow_chart.edge('ClassicalErosion', 'ApplyErosion')
flow_chart.edge('ApplyErosion', 'ImageSharpening')
flow_chart.edge('ImageSharpening', 'ApplySharpening')
flow_chart.edge('ApplySharpening', 'ImageRestoration')
flow_chart.edge('ImageRestoration', 'ApplyRestoration')
flow_chart.edge('ApplyRestoration', 'Visualization')
flow_chart.edge('Visualization', 'DisplayOriginal')
flow_chart.edge('DisplayOriginal', 'DisplayDilated')
flow_chart.edge('DisplayDilated', 'DisplayEroded')
flow_chart.edge('DisplayEroded', 'DisplaySharpened')
flow_chart.edge('DisplaySharpened', 'DisplayRestored')
flow_chart.edge('DisplayRestored', 'SaveOutput')
flow_chart.edge('SaveOutput', 'End')

# Render and view the flow chart
flow_chart.view()
